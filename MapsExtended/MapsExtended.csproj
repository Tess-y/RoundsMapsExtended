<Project Sdk="Microsoft.NET.Sdk">
	<PropertyGroup>
		<Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
		<Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
		<ProjectGuid>{B2C65EF9-CA5E-46C3-AF98-5760A6EDDCFD}</ProjectGuid>
		<OutputType>Library</OutputType>
		<AppDesignerFolder>Properties</AppDesignerFolder>
		<RootNamespace>MapsExt</RootNamespace>
		<AssemblyName>MapsExtended</AssemblyName>
		<Authors>olavim</Authors>
		<TargetFramework>net462</TargetFramework>
		<GenerateAssemblyInfo>false</GenerateAssemblyInfo>
	</PropertyGroup>
	<PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|AnyCPU' ">
		<DebugSymbols>true</DebugSymbols>
		<DebugType>full</DebugType>
		<Optimize>false</Optimize>
		<OutputPath>bin\Debug\</OutputPath>
		<DefineConstants>DEBUG;TRACE</DefineConstants>
		<ErrorReport>prompt</ErrorReport>
		<WarningLevel>4</WarningLevel>
	</PropertyGroup>
	<PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|AnyCPU' ">
		<DebugType>pdbonly</DebugType>
		<Optimize>true</Optimize>
		<OutputPath>bin\Release\</OutputPath>
		<DefineConstants>TRACE</DefineConstants>
		<ErrorReport>prompt</ErrorReport>
		<WarningLevel>4</WarningLevel>
	</PropertyGroup>
	<ItemGroup>
		<None Remove="AssetsEmbedded\mapbase" />
		<None Remove="AssetsEmbedded\mapobjects" />
	</ItemGroup>
	<ItemGroup>
		<EmbeddedResource Include="AssetsEmbedded\mapbase" />
		<EmbeddedResource Include="AssetsEmbedded\mapobjects" />
	</ItemGroup>
	<ItemGroup>
		<PackageReference Include="UnboundLib" Version="2.7.3" />
	</ItemGroup>

	<Import Project="..\BuildProps.props" />

	<ItemGroup>
	<Reference Include="Assembly-CSharp">
		<HintPath>$(RoundsFolder)\Rounds_Data\Managed\Assembly-CSharp.dll</HintPath>
	</Reference>
	<Reference Include="0Harmony">
		<HintPath>$(RoundsFolder)\BepInEx\core\0Harmony.dll</HintPath>
	</Reference>
	<Reference Include="BepInEx">
		<HintPath>$(RoundsFolder)\BepInEx\core\BepInEx.dll</HintPath>
	</Reference>
	<Reference Include="PhotonRealtime">
		<HintPath>$(RoundsFolder)\Rounds_Data\Managed\PhotonRealtime.dll</HintPath>
	</Reference>
	<Reference Include="PhotonUnityNetworking">
		<HintPath>$(RoundsFolder)\Rounds_Data\Managed\PhotonUnityNetworking.dll</HintPath>
	</Reference>
	<Reference Include="Sirenix.Serialization">
		<HintPath>$(RoundsFolder)\Rounds_Data\Managed\Sirenix.Serialization.dll</HintPath>
	</Reference>
	<Reference Include="Sirenix.Serialization.Config">
		<HintPath>$(RoundsFolder)\Rounds_Data\Managed\Sirenix.Serialization.Config.dll</HintPath>
	</Reference>
	<Reference Include="Unity.TextMeshPro">
	  <HintPath>$(RoundsFolder)\Rounds_Data\Managed\Unity.TextMeshPro.dll</HintPath>
	</Reference>
	<Reference Include="UnityEngine">
		<HintPath>$(RoundsFolder)\Rounds_Data\Managed\UnityEngine.dll</HintPath>
	</Reference>
	<Reference Include="UnityEngine.AssetBundleModule">
		<HintPath>$(RoundsFolder)\Rounds_Data\Managed\UnityEngine.AssetBundleModule.dll</HintPath>
	</Reference>
	<Reference Include="UnityEngine.CoreModule">
		<HintPath>$(RoundsFolder)\Rounds_Data\Managed\UnityEngine.CoreModule.dll</HintPath>
	</Reference>
	<Reference Include="UnityEngine.IMGUIModule">
		<HintPath>$(RoundsFolder)\Rounds_Data\Managed\UnityEngine.IMGUIModule.dll</HintPath>
	</Reference>
	<Reference Include="UnityEngine.Physics2DModule">
		<HintPath>$(RoundsFolder)\Rounds_Data\Managed\UnityEngine.Physics2DModule.dll</HintPath>
	</Reference>
	</ItemGroup>
	<ItemGroup>
		<Reference Include="System" />
		<Reference Include="System.Core" />
		<Reference Include="System.Xml.Linq" />
		<Reference Include="System.Data.DataSetExtensions" />
		<Reference Include="Microsoft.CSharp" />
		<Reference Include="System.Data" />
		<Reference Include="System.Net.Http" />
		<Reference Include="System.Xml" />
	</ItemGroup>
	<Target Name="ReadPackageVersionFromOutputAssembly" DependsOnTargets="Build" Outputs="$(PackageVersion)">
		<GetAssemblyIdentity AssemblyFiles="$(TargetPath)">
			<Output TaskParameter="Assemblies" ItemName="PackAssembly" />
		</GetAssemblyIdentity>
		<PropertyGroup>
			<PackageVersion>%(PackAssembly.Version)</PackageVersion>
		</PropertyGroup>
	</Target>
	<Target Name="PostBuildTaskWin" Condition="'$(OS)' == 'Windows_NT'" DependsOnTargets="Build" AfterTargets="Build">
		<CallTarget Targets="ReadPackageVersionFromOutputAssembly">
			<Output TaskParameter="TargetOutputs" PropertyName="PackageVersion" />
		</CallTarget>
		<Exec Command="powershell.exe -ExecutionPolicy RemoteSigned -File &quot;$(SolutionDir)publish.ps1&quot; -Version &quot;$(PackageVersion.Remove($(PackageVersion.LastIndexOf('.')), 2))&quot; -Target &quot;$(ConfigurationName)&quot; -TargetPath &quot;$(TargetDir.TrimEnd('\'))&quot; -TargetAssembly &quot;$(TargetFileName)&quot; -RoundsPath &quot;$(RoundsFolder.TrimEnd('\'))&quot; -ProjectPath &quot;$(SolutionDir.TrimEnd('\'))&quot;" />
	</Target>
</Project>